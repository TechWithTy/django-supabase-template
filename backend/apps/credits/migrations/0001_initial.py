# Generated by Django 4.2.10 on 2025-03-29 21:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditUsageRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint_path', models.CharField(help_text='API endpoint path pattern (e.g., /api/resource/)', max_length=255, unique=True, verbose_name='Endpoint Path')),
                ('credits_per_request', models.IntegerField(default=1, help_text='Number of credits deducted per request', verbose_name='Credits Per Request')),
                ('description', models.TextField(blank=True, help_text='Description of the endpoint and its credit usage', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this credit usage rate is active', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Credit Usage Rate',
                'verbose_name_plural': 'Credit Usage Rates',
            },
        ),
        migrations.CreateModel(
            name='CreditTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('deduction', 'Deduction'), ('addition', 'Addition'), ('hold', 'Hold'), ('release', 'Hold Release')], default='deduction', max_length=20, verbose_name='Transaction Type')),
                ('amount', models.IntegerField(help_text='Positive for additions, negative for deductions', verbose_name='Amount')),
                ('balance_after', models.IntegerField(help_text='User balance after this transaction', verbose_name='Balance After Transaction')),
                ('description', models.CharField(help_text='Description of the transaction', max_length=255, verbose_name='Description')),
                ('endpoint', models.CharField(blank=True, help_text='API endpoint that triggered the transaction', max_length=255, null=True, verbose_name='API Endpoint')),
                ('reference_id', models.UUIDField(blank=True, help_text='Reference to related transaction (e.g., hold ID)', null=True, verbose_name='Reference ID')),
                ('status', models.CharField(choices=[('COMPLETED', 'Completed'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='COMPLETED', help_text='Current status of the transaction', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the transaction', null=True, verbose_name='Notes')),
                ('synced_to_supabase', models.BooleanField(default=False, help_text='Whether this transaction has been synced to Supabase', verbose_name='Synced to Supabase')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Credit Transaction',
                'verbose_name_plural': 'Credit Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditHold',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.IntegerField(help_text='Number of credits on hold', verbose_name='Amount')),
                ('description', models.CharField(help_text='Description of the operation requiring the hold', max_length=255, verbose_name='Description')),
                ('endpoint', models.CharField(blank=True, help_text='API endpoint that triggered the hold', max_length=255, null=True, verbose_name='API Endpoint')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this hold is still active', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this hold automatically expires', null=True, verbose_name='Expires At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_holds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Credit Hold',
                'verbose_name_plural': 'Credit Holds',
                'ordering': ['-created_at'],
            },
        ),
    ]
